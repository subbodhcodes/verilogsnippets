module ddr3(
    input [9:0] user_d,        
    input clk,                
    input r_en, w_en, enable, 
    output reg [3:0] r_out,    
    output reg [3:0] w_out     
);
reg [3:0] memory_array [3:0][3:0]; 

always @(posedge clk) begin
    if (enable && user_d[9]) begin 
        // Write operation
        if (!user_d[8]) begin
            memory_array[user_d[3:2]][user_d[1:0]] <= user_d[7:4];
        end
        // Read operation
        else if (user_d[8]) begin
            r_out <= memory_array[user_d[3:2]][user_d[1:0]];
        end
        
        if (r_en) begin
            r_out <= user_d[7:4];
        end
        else if (w_en) begin
            w_out <= user_d[7:4];
        end
    end
end


always @(negedge clk) begin
    if (enable && user_d[9]) begin
        // Write operation
        if (!user_d[8]) begin
            memory_array[user_d[3:2]][user_d[1:0]] <= user_d[7:4];
        end
        // Read operation
        else if (user_d[8]) begin
            r_out <= memory_array[user_d[3:2]][user_d[1:0]];
        end

        if (r_en) begin
            r_out <= user_d[7:4];
        end
        else if (w_en) begin
            w_out <= user_d[7:4];
        end
    end
end

endmodule
